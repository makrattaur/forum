@model Forum.ViewModels.ForumViewModel
@{
    ViewBag.Title = "Threads";
}

<h2>@Model.Forum.Name</h2>

<div class="panel panel-default thread-list">
    <table class="table table-bordered">
        <tr>
            <th>Threads</th>
            <th>Posts</th>
            <th>Views</th>
            <th>Last Post</th>
        </tr>
        @{
            var threads = Model.PermissionManager.CanSeeForumThreads(Model.Forum) ?  Model.Forum.Thread : Enumerable.Empty<Database.Thread>();
            
            foreach (var thread in threads.Skip((Model.Page - 1) * 10).Take(10))
            {
                <tr>
                    <td class="title">
                        @Html.ActionLink(thread.Title, "Index", "Thread", new { id = thread.Id }, null) <br />
                        by @thread.User.Name on @thread.CreationTime
                    </td>
                    <td class="post-count">@thread.Post.Count</td>
                    <td class="times-viewed">@thread.TimesViewed</td>
                    <td class="last-post"> </td>
                </tr>
            }
            if (threads.Count() < 1)
            {
                <tr>
                    <td colspan="4">
                        <em>(no threads in forum)</em>
                    </td>
                </tr> 
            }
        }
    </table>
</div>

<div class="clearfix">
    <div class="pull-left">
        @if(Model.PermissionManager.CanCreateThread(Model.Forum))
        {
            @Html.ActionLink("Create new thread", "Create", "Thread", new { id = Model.Forum.Id }, new { @class = "btn btn-primary" }) <br />
        }
    </div>
    <div class="forum-pager pull-right" style="display: table;">
        @{
            var pageCount = (int)Math.Ceiling((float)threads.Count() / 10.0f);
            var displayPager = pageCount > 1;
            
            if(displayPager)
            {
                <span class="page-number" style="display: table-cell; vertical-align: middle; padding-right: 5px;">Page @Model.Page of @pageCount</span>
            
                var lowerBound = Math.Min(pageCount - 2, 1);
                var upperBound = Math.Min(pageCount + 2, pageCount);

                <ul class="pagination" style="margin: 0; display: table-cell; vertical-align: middle;">
                @for (int i = lowerBound; i <= upperBound; i++)
                {
                    <li @Html.Raw(i == Model.Page ? "class=\"active\"" : null)>@Html.ActionLink(i.ToString(), "Index", new { page = i })</li>
                }
                </ul>
            }
        }
    </div>
</div>
@Html.ActionLink("Back to forums", "Index", "Home")
